---
stage_etc_hosts:
- regexp: '^10\.0\.0\.10 '
  line: '10.0.0.10 gitlab.example.test gitlab0 registry.example.test mattermost.example.test'
- regexp: '^10\.0\.0\.11 '
  line: '10.0.0.11 gitlab-runner1.example.test gitlab-runner1'
- regexp: '^10\.0\.0\.12 '
  line: '10.0.0.12 gitlab-runner2.example.test gitlab-runner2'
- regexp: '^10\.0\.0\.9 '
  line: '10.0.0.9 dokku0.example.test dokku0'

stage_gitlab_omnibus_config: |
  gitlab_rails['time_zone'] = 'Asia/Tokyo'

  base_domain = 'example.test'
  gitlab_domain = "gitlab.#{base_domain}"
  registry_domain = "registry.#{base_domain}"
  mattermost_domain = "mattermost.#{base_domain}"

  if File.exist?("/etc/letsencrypt/live/#{gitlab_domain}/fullchain.pem")
    external_url "https://#{gitlab_domain}"
    nginx['redirect_http_to_https'] = true
    nginx['ssl_certificate'] = "/etc/letsencrypt/live/#{gitlab_domain}/fullchain.pem"
    nginx['ssl_certificate_key'] = "/etc/letsencrypt/live/#{gitlab_domain}/privkey.pem"
  else
    external_url "http://#{gitlab_domain}"
  end
  nginx['custom_gitlab_server_config'] = 'location ^~ /.well-known { root /var/www/letsencrypt; }'

  if File.exist?("/etc/letsencrypt/live/#{registry_domain}/fullchain.pem")
    registry_external_url "https://#{registry_domain}"
    registry_nginx['redirect_http_to_https'] = true
    registry_nginx['ssl_certificate'] = "/etc/letsencrypt/live/#{registry_domain}/fullchain.pem"
    registry_nginx['ssl_certificate_key'] = "/etc/letsencrypt/live/#{registry_domain}/privkey.pem"
  else
    registry_external_url "http://#{registry_domain}"
  end
  registry_nginx['custom_gitlab_server_config'] = 'location ^~ /.well-known { root /var/www/letsencrypt; }'

  if File.exist?("/etc/letsencrypt/live/#{mattermost_domain}/fullchain.pem")
    mattermost_external_url "https://#{mattermost_domain}"
    mattermost_nginx['redirect_http_to_https'] = true
    mattermost_nginx['ssl_certificate'] = "/etc/letsencrypt/live/#{mattermost_domain}/fullchain.pem"
    mattermost_nginx['ssl_certificate_key'] = "/etc/letsencrypt/live/#{mattermost_domain}/privkey.pem"
    mattermost['service_use_ssl'] = true
  else
    mattermost_external_url "http://#{mattermost_domain}"
  end
  mattermost_nginx['custom_gitlab_mattermost_server_config'] = 'location ^~ /.well-known { root /var/www/letsencrypt; }'

  mattermost['email_enable_sign_in_with_email'] = false # gitlab accounts only
  mattermost['email_enable_sign_up_with_email'] = false # default
  mattermost['email_send_email_notifications'] = true
  mattermost['email_smtp_username'] = "username"
  mattermost['email_smtp_password'] = "password"
  mattermost['email_smtp_server'] = "smtp.example.com"
  mattermost['email_smtp_port'] = 465
  mattermost['email_connection_security'] = 'TLS' # Or 'STARTTLS'
  mattermost['email_feedback_name'] = "GitLab Mattermost"
  mattermost['email_feedback_email'] = "email@example.com"

  mattermost['localization_server_locale'] = 'ja'
  mattermost['localization_client_locale'] = 'ja'

  mattermost['service_enable_incoming_webhooks'] = true

  eval(File.read('/etc/gitlab/local.rb')) if File.exist?('/etc/gitlab/local.rb')

stage_gitlab_runner_docker_daemon_config:
  insecure-registries:
  - "registry.example.test"
stage_gitlab_runner_coordinator_url: "http://gitlab.example.test/"
stage_gitlab_runner_register_options: >-
  --docker-volumes /var/run/docker.sock:/var/run/docker.sock

stage_docker_dns:
  gitlab-runner1:
  - '10.0.0.11'
  gitlab-runner2:
  - '10.0.0.12'
  dokku0:
  - '10.0.0.9'

stage_dokku_hostname: "10.0.0.9.xip.io"
stage_dokku_skip_key_file: "false"
stage_dokku_key_file: "/home/vagrant/.ssh/authorized_keys"
